{"version":3,"file":"static/js/435.242224a2.chunk.js","mappings":"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","sources":["redux/filter/filterSelectors.js","redux/contacts/contactsSelectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ContactsContainer/ContactsContainer.styled.jsx","components/ContactsContainer/ContactsContainer.jsx","pages/ContactsPage.js"],"sourcesContent":["export const selectFilter = state => state.filter.filter;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const filterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import styled from '@emotion/styled';\n\nexport const DeleteBtn = styled.button`\n  padding: 5px 10px;\n  background-color: #6495ed;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.5s;\n  &:hover {\n    background-color: #3367d6;\n    box-shadow: 0 0 10px #fff;\n  }\n  &:active {\n    background-color: #2a56c8;\n    box-shadow: 0 0 10px #fff;\n  }\n  font-weight: 700;\n  margin-left: auto;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ListItem = styled.li`\n  color: #3367d6;\n  font-weight: 600;\n  display: flex;\n  justify-content: space-between;\n  padding: 12px;\n  gap: 50px;\n`;\n\n export const NumberSpan = styled.span`\n color: black;`","import { DeleteBtn, ListItem, NumberSpan } from \"./ContactItem.styled\";\n\nexport const Item = ({ name, number, id, onClick }) => {\n    return (\n      <ListItem>\n        <span>\n          {name}: <NumberSpan>{number}</NumberSpan>\n        </span>\n        <DeleteBtn onClick={() => onClick({ id, name, number })}>\n          Delete\n        </DeleteBtn>\n      </ListItem>\n    );\n  };\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { filterContacts } from '../../redux/contacts/contactsSelectors';\nimport { Item } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\n\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filterContacts);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onClick={() => {\n            Notify.info(`${contact.name} removed from your phone book`);\n            dispatch(deleteContact(contact.id));\n          }}\n        />\n      ))}\n    </List>\n  );\n};","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Label = styled.label`\n  display: flex;\n  margin-bottom: 5px;\n  color: #6495ed;\n  font-weight: 600;\n  align-items: baseline;\n  flex-direction: column;\n`;\n\nexport const AddContactBtn = styled.button`\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 14px;\n  margin-bottom: 5px;\n  outline: none;\n  border: 1px solid #6495ed;\n  max-width: 500px;\n  margin: 15px auto;\n  display: block;\n  background-color: #6495ed;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.5s;\n\n  &:hover {\n    background-color: #4169e1;\n    box-shadow: 0 0 10px #fff;\n  }\n  \n  font-weight: 600;`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 14px;\n  margin-bottom: 5px;\n  outline: none;\n  border-color: #6495ed;\n  max-width: 500px;\n  margin: 15px auto;\n  display: block;\n`;\n","import { Formik, Form } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport { AddContactBtn, Label, FormContainer, StyledField } from './Form.styled'\n\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={async (values, actions) => {\n          actions.resetForm();\n\n          const contactExists = contacts.some(\n            (contact) => contact.name.toLowerCase() === values.name.toLowerCase()\n          );\n\n          if (contactExists) {\n            Notify.failure(`${values.name} already in phonebook`);\n            return;\n          }\n\n          try {\n            await dispatch(addContact(values)).unwrap();\n            Notify.success(`${values.name} added to your contacts`);\n          } catch (error) {\n            Notify.failure(error.message);\n          }\n        }}\n      >\n        <FormContainer>\n        <Form>\n          <Label>\n            Name\n            <StyledField type=\"text\" name=\"name\" placeholder=\"Alice\" />\n          </Label>\n\n          <Label>\n            Phone\n            <StyledField type=\"text\" name=\"number\" placeholder=\"+380...\" />\n          </Label>\n\n          <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n        </Form>\n        </FormContainer>\n      </Formik>\n    </div>\n  );\n};","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 14px;\n  margin-bottom: 5px;\n  outline: none;\n  border-color: #6495ed;\n  max-width: 500px;\n  display: block; \n`;\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\nimport { Input } from \"./Searchbar.styled\"\n\nexport const Searchbar = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div>\n      <Input\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n        type=\"text\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n      />\n    </div>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-shadow: 3px 3px 3px #fff, -1px -1px 5px #fff;\n  font-weight: 800;\n  color: #6495ed;\n  font-family: 'Roboto', sans-serif;\n  margin: 30px 0;\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-flow: column;\n  margin: 20px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextItem = styled.p`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  font-size: 18px;\n  margin: 20px auto;\n  color: #002244;\n`;\n","import { ContactList } from '../../components/ContactList/ContactList';\nimport { ContactForm } from '../../components/Form/Form';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport { useSelector } from 'react-redux';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\nimport { Title, FormContainer, TextItem } from './ContactsContainer.styled';\n\nexport const ContactsContainer = () => {\n  const contacts = useSelector(selectContacts);\n  return (\n    <FormContainer>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Searchbar />\n      {contacts.length > 0 ? <ContactList /> :  <TextItem>No contacts found 😥\n</TextItem>}\n    </FormContainer>\n  );\n};","import { ContactsContainer } from 'components/ContactsContainer/ContactsContainer';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return <ContactsContainer />;\n}"],"names":["selectFilter","state","filter","selectContacts","contacts","filterContacts","createSelector","contact","name","toLowerCase","includes","DeleteBtn","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","NumberSpan","_templateObject3","Item","_ref","number","id","onClick","_jsxs","children","_jsx","List","ContactList","dispatch","useDispatch","useSelector","map","Notify","concat","deleteContact","Label","AddContactBtn","FormContainer","StyledField","Field","_templateObject4","ContactForm","Formik","initialValues","onSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","actions","_context","prev","next","resetForm","some","abrupt","addContact","unwrap","t0","message","stop","_x","_x2","apply","arguments","Form","type","placeholder","Input","Searchbar","onChange","e","changeFilter","target","value","Title","TextItem","ContactsContainer","length","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}